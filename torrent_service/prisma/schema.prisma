datasource db {
  provider = "postgresql" // or "mysql", "sqlite", "sqlserver"
  url      = env("DATABASE_URL")
}

generator client {
  provider             = "prisma-client-py"
  recursive_type_depth = -1
}




model User {
    id        String      @id @default(uuid())
    username  String   @unique
    email     String   @unique
    password  String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    torrents   Torrent[]  @relation("UserTorrents")
    comments   Comment[]  @relation("UserComments")
    ratings    Rating[]   @relation("UserRatings")
}

model Torrent {
    id           String        @id @default(uuid())
    title        String
    description  String
    uploader     User       @relation("UserTorrents", fields: [uploaderId], references: [id])
    uploaderId   String
    size         Float
    category     String
    type         String
    downloads    Int    
    health       Float
    createdAt    DateTime   @default(now())
    updatedAt    DateTime   @updatedAt
    comments     Comment[]
    ratings      Rating[]
    path         String
}

model Comment {
    id        String      @id @default(uuid())
    content   String
    torrent   Torrent  @relation(fields: [torrentId], references: [id])
    torrentId String
    user      User     @relation("UserComments", fields: [userId], references: [id])
    userId    String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Rating {
    id        String      @id @default(uuid())
    value     Int
    torrent   Torrent  @relation(fields: [torrentId], references: [id])
    torrentId String
    user      User     @relation("UserRatings", fields: [userId], references: [id])
    userId    String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

